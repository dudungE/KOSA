package bmi.quiz;

import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Scanner;

public class BmiManager {
	ArrayList<Human> humans = new ArrayList<Human>();

	Scanner sc = new Scanner(System.in);

	public void addHuman() {
		System.out.println("사람을 추가합니다.");

		System.out.print("이름을 입력하세요");
		String name = sc.next();

		System.out.print("성별을 입력하세요(남/여)");
		String gender = sc.next();

		System.out.print("키를 입력하세요(소수점 한자리)");
		double height = sc.nextDouble();

		System.out.print("몸무게를 입력하세요.");
		double weight = sc.nextDouble();

		Human newHuman = new Human(name, gender, height, weight);
		calculateBmi(newHuman);

		System.out.println(newHuman.getName() + "을 추가합니다.");
		humans.add(newHuman);
	}

	public void calculateBmi(Human human) {
		// BMI = 몸무게 / ( (키 / 100.0) * (키 / 100.0) );
		double height = human.getHeight();
		double weight = human.getWeight();
		human.setBmi(Math.ceil((weight / ((height / 100.0) * (height / 100.0))) * 100) / 100);
		
//		human.setBmi(Math.ceil(((height - 100) * 0.9) * 100) / 100);
//		if (human.getGender().equals("남")) {
//			human.setBmi(Math.ceil(((height - 100) * 0.9) * 100) / 100);
//		} else if (human.getGender().equals("여")) {
//			human.setBmi((height - 100) * 0.85);
//			human.setBmi(Math.ceil(((height - 100) * 0.85) * 100) / 100);
//		}
	}

	public void deleteHuman() {
		System.out.println("삭제할 사람의 이름을 입력해주세요");
		String name = sc.next();

		for (Human h : humans) {
			if (h.getName().equals(name)) {
				System.out.println(h.getName() + "을 삭제합니다.");
				humans.remove(h);
				return;
			}
		}
		System.out.println("해당 이름을 가진 사람이 존재하지 않습니다. 다시 입력해주세요");
		return;
	}

	public void printHumans() {
		for (Human h : humans) {
			if (h.getBmi() >= 25.0) {
				System.out.println(h.getName() + "님 비만이십니다. 살 빼셔야 합니다. bmi 지수는 " + h.getBmi());
			} else if (h.getBmi() >= 23.0) {
				System.out.println(h.getName() + "님 과체중이십니다. 그만 먹자! bmi 지수는 " + h.getBmi());
			} else if (h.getBmi() >= 18.5) {
				System.out.println(h.getName() + "님 정상이시네요. 유지하세요!! bmi 지수는 " + h.getBmi());
			} else {
				System.out.println(h.getName() + "님 저체중이시네요. 살 좀 찝시다. bmi 지수는 " + h.getBmi());
			}
		}
	}

	public void editHuman() {
		System.out.println("수정할 사람의 이름을 입력해주세요");
		String name = sc.next();

		System.out.println("수정할 사항을 선택해주세요");
		System.out.println("1 : 키");
		System.out.println("2 : 몸무게");
		System.out.println("3 : 취소");
		int selectNumber = sc.nextInt();
		Human human = findhuman(name);

		switch (selectNumber) {
		case 1:
			System.out.println("변경할 키를 입력해주세요(소수점 한자리)");
			double height = Math.ceil(sc.nextDouble() * 10) / 10;
			human.setHeight(height);
			calculateBmi(human);
			break;

		case 2:
			System.out.println("변경할 몸무게를 입력해주세요(소수점 한자리)");
			double weight = Math.ceil(sc.nextDouble() * 10) / 10;
			human.setWeight(weight);
			calculateBmi(human);
			break;
		case 3:
			break;
		default:
			System.out.println("잘못 입력하셨습니다. 다시 실행해주세요");
			break;
		}
	}

	public void saveFile() throws IOException {
		String name = null;
		String gender = null;
		double height = 0;
		double weight = 0;
		double bmi = 0;
		boolean con = true;

		ObjectOutputStream oos = null;
		File f = new File("humans.txt");
		FileOutputStream fos = null;

		try {
			fos = new FileOutputStream(f);
			oos = new ObjectOutputStream(fos);

			for (Human h : humans) {
				name = h.getName();
				gender = h.getGender();
				height = h.getHeight();
				weight = h.getWeight();
				bmi = h.getBmi();

				oos.writeObject(name);
				oos.writeObject(gender);
				oos.writeObject(height);
				oos.writeObject(weight);
				oos.writeObject(bmi);
			}
			
			System.out.println("humans.txt 저장완료");
		} catch (Exception e) {
			oos.close();
		}
	}
	
	public void loadFile() throws ClassNotFoundException, IOException {
		String name = null;
		String gender = null;
		double height = 0;
		double weight = 0;
		double bmi = 0;
		boolean con = true;
		
		File f = new File("humans.txt");
		FileInputStream fis = null;
		ObjectInputStream bis = null;
		
		try {
			fis = new FileInputStream(f);
			bis = new ObjectInputStream(fis);
			
			System.out.println("    >> 사람 정보 << \n");
			System.out.println("이름 \t 성별 \t 키 \t 몸무게 \t bmi");
			
			while (con) { // 하나의 파일이 끝나면 다른 파일로 간주해야함. 포인터 변경됨
				name = (String) bis.readObject();
				gender = (String) bis.readObject();
				height = (Double) bis.readObject();
				weight = (Double) bis.readObject();
				bmi = (Double) bis.readObject();
				System.out.print(name + "\t" + gender + "\t" + height + "\t" + weight + "\t" + bmi + "\r\n");
			}
		} catch (EOFException e) {
			System.out.println("파일 로드 성공");
		} finally {
			bis.close();
		}
	}

	private Human findhuman(String name) {
		Human editHuman;
		for (Human h : humans) {
			if (h.getName().equals(name)) {
				return h;
			}
		}
		return null;
	}

}
